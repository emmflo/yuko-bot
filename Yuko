#!/usr/bin/env ruby
# Oui le code est dégueux... Et alors ?!
require 'irc-socket'
require 'myanimelist'
require 'htmlentities'
require 'io/console'
# require 'open-uri'
require 'link_thumbnailer'

$:.unshift File.dirname(__FILE__)
require 'lib/yuko'
require 'lib/myanimelist-x'

load 'config.rb'

Yuko.conf.prompt_mal_config unless Yuko.conf.mal_configured?

begin
  Yuko.conf.check
rescue Yuko::ConfError => e
  e.messages.each {|err| STDERR.puts "Errors: config.rb: #{err}"}
  exit
end


MyAnimeList.configure do |config|
  config.username = Yuko.conf.mal.username
  config.password = Yuko.conf.mal.password
end

begin
  MyAnimeList.verify_credentials
rescue RestClient::Unauthorized => e
  puts 'Error: Incorrect login or password (mal)'
  exit
end


irc = IRCSocket.new(Yuko.conf.irc.server)
irc.connect

if irc.connected?
  irc.nick Yuko.conf.irc.nickname
  irc.user 'Yuko', 0, '*', 'I am a bot.'

  html = HTMLEntities.new

  while line = irc.read
    line = line.force_encoding('UTF-8')
    puts "Received: #{line}"

    if line.split[1] == '376'
      irc.join    Yuko.conf.irc.channel
      irc.privmsg Yuko.conf.irc.channel, Yuko.conf.irc.greeting unless Yuko.conf.irc.greeting.nil?
    end

    if line.split[0] == 'PING'
      irc.pong line.split[1]
    end

    match_data = line.match /^.+PRIVMSG[[:blank:]]+(?<chan>[^[[:blank:]]]+)[[:blank:]]+:(?<msg>.*)$/

    if match_data != nil
      chan     = match_data[:chan]
      msg      = match_data[:msg]
      command  = msg.match /^!(?<name>[^[[:blank:]]]+)[[:blank:]]+(?<params>.*)$/
      urls     = msg.scan /https?:\/\/[^[[:blank:]]]+/

      if command
        if command[:name] == 'anime' || command[:name] == 'manga'
          search_type = command[:name]
          results = search_type == 'anime' ? MyAnimeList.search_anime(command[:params]) : MyAnimeList.search_manga(command[:params])

          if results.any?
            irc.privmsg chan, "Résultats pour \"#{command[:params]}\""
            results.sort! {|entry1, entry2| entry2['score'].to_f <=> entry1['score'].to_f }

            results.take(5).each do |entry|
              title = html.decode entry['title']
              url   = "http://myanimelist.net/#{search_type}/#{entry['id']}"
              irc.privmsg chan, "#{title} →\x032 #{url}"
            end
          else
            irc.privmsg chan, "Aww~ la recherche pour \"#{command[:params]}\" n'a rien donné é_è"
          end
        end
      end

      if urls.any?
        urls.take(3).each do |url|
          # begin
          #   open(url).read =~ /<title>(.*)<\/title>/
          #   irc.privmsg chan, html.decode($1) if $1
          # rescue StandardError#SocketError
          #   irc.privmsg chan, e.message
          # end
          object = LinkThumbnailer.generate url
          irc.privmsg chan, object.title

        end
      end


    end

  end
end
