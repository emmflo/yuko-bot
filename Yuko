#!/usr/bin/env ruby
# Oui le code est dégueux... Et alors ?!
require 'irc-socket'
require 'myanimelist'
require 'htmlentities'
require 'io/console'
require 'link_thumbnailer'
require 'googleajax'

$:.unshift File.dirname(__FILE__)
require 'lib/yuko'
require 'lib/myanimelist-x'
require 'lib/message'

def init(_)
  load 'config.rb'

  Yuko.conf.prompt_mal_config unless Yuko.conf.mal_configured?

  begin
    Yuko.conf.check
  rescue Yuko::ConfError => e
    e.messages.each {|err| STDERR.puts "Errors: config.rb: #{err}"}
    exit
  end


  MyAnimeList.configure do |config|
    config.username = Yuko.conf.mal.username
    config.password = Yuko.conf.mal.password
  end

  begin
    MyAnimeList.verify_credentials
  rescue RestClient::Unauthorized => e
    puts 'Error: Incorrect login or password (mal)'
    exit
  end

  LinkThumbnailer.configure do |config|
    config.attributes = [:title]
  end
end

def run!
  irc = IRCSocket.new(Yuko.conf.irc.server, Yuko.conf.irc.port, Yuko.conf.irc.ssl)
  irc.connect

  if irc.connected?
    irc.nick Yuko.conf.irc.nickname
    irc.user 'Yuko', 0, '*', 'I am a bot.'

    while line = irc.read
      message = Message.new(line)
      puts "Received: #{message.raw}"
      process(irc, message)
    end
  end
end

def process(irc, message)
  handle_end_of_motd(irc)      if message.is_end_of_motd?
  handle_ping(irc, message)    if message.is_ping?
  handle_privmsg(irc, message) if message.is_privmsg?
end

def handle_end_of_motd(irc)
  irc.join Yuko.conf.irc.channel
  irc.privmsg Yuko.conf.irc.channel, Yuko.conf.irc.greeting unless Yuko.conf.irc.greeting.nil?
end

def handle_ping(irc, message)
  irc.pong message.params[0]
end

def handle_privmsg(irc, message)
  request = message.trailing.match /^!(?<name>\S+)(\s+(?<params>.*))?$/
  urls    = message.trailing.scan /https?:\/\/\S+/
  lmgtfy  = message.trailing.match /https?:\/\/lmgtfy\.com\/\S+?(?<query>\S*)[^#\s]*/
  google  = message.trailing.match /https?:\/\/.*\.google\..*\/\S*?(search\?|)(?<query>\S*)/

  handle_privmsg_request(irc, message, request) if request
  handle_privmsg_urls(irc, message, urls)       if urls.any? && !lmgtfy && !google
  handle_privmsg_lmgtfy(irc, message, lmgtfy)   if lmgtfy
  handle_privmsg_google(irc, message, google)   if google
end

def handle_privmsg_request(irc, message, request)
  request = Hash[request.names.map(&:to_sym).zip(request.captures)]
  request[:name].downcase!

  if (request[:name] == 'anime' || request[:name] == 'manga') && !request[:params].nil?
    search_type = request[:name]
    results     = MyAnimeList.send "search_#{search_type}".to_sym, request[:params]

    if results.any?
      irc.privmsg message.channel, "Résultats pour \"#{request[:params]}\""

      results.sort! {|entry1, entry2| entry2['score'].to_f <=> entry1['score'].to_f }
      results.take(5).each do |entry|
        title = HTMLEntities.new.decode entry['title']
        url   = "http://myanimelist.net/#{search_type}/#{entry['id']}"
        irc.privmsg message.channel, "#{title} →\x032 #{url}"
      end
    else
      search = HTMLEntities.new.decode request[:params]
      irc.privmsg message.channel, "Aww~ la recherche pour \"#{search}\" n'a rien donné é_è"
    end
  end

  if request[:name][0] == 'g' && !request[:params].nil?
    num = request[:name][-1].to_i
    num = 3 if num <= 0
    type = "w"
    type = request[:name][1] if ["w", "n", "i", "v"].include? request[:name][1]
    google_search(irc, message, request[:params].split(), num, type)
  end

  if request[:name] == 'titof' || request[:name] == '(21)'
    irc.privmsg message.channel, "http://nyu.moe/loliwaytolive.html"
  end

  if request[:name] == 'holo' || request[:name] == "shingekinoslg"
    irc.privmsg message.channel, "https://www.listenonrepeat.com/?v=8PN7kNWV06w"
  end

  if request[:name] == 'paraze' || request[:name] == "moe"
    irc.privmsg message.channel, "http://listenonrepeat.com/?v=wvvScxzxyLw"
  end
  
  if request[:name] == 'Elried' || request[:name] == "go"
    irc.privmsg message.channel, "Oli!!! Vas jouer au Go! Maintenant"
  end

  if request[:name] == 'dudurenchon'
    irc.privmsg message.channel, "http://image.noelshack.com/fichiers/2014/44/1414522583-dudurenchon.png"
  end

  if request[:name] == 'praisememore'
    irc.privmsg message.channel, "https://i.imgur.com/f3WLqUw.jpg"
  end

  if request[:name] == 'internet'
    irc.privmsg message.channel, "http://www.internetshouldbeillegal.com/"
  end
end

def handle_privmsg_urls(irc, message, urls)
  urls.take(3).each do |url|
    begin
      object = LinkThumbnailer.generate url
      irc.privmsg message.channel, object.title[0...512] if object.title && object.title.size > 0
    rescue StandardError
    end
  end
end

def handle_privmsg_lmgtfy(irc, message, lmgtfy)
  lmgtfy = Hash[lmgtfy.names.map(&:to_sym).zip(lmgtfy.captures)]
  num = 3
  query = ""
  lmgtfy[:query].split(/&|#/).each do |param|
    param = param.split("=")
    query = param[1] if param[0] == "q"
    l = param[1].to_i if param[0] == "l"
  end
  params = query.split('+')
  google_search(irc, message, params, num)
end

def handle_privmsg_google(irc, message, google)
  google = Hash[google.names.map(&:to_sym).zip(google.captures)]
  num = 3
  query = ""
  type = "w"
  first_split = google[:query].split("#")
  first_split[0].split("&").each do |param|
    puts param
    param = param.split("=")
    if param[0] == "q"
      query = param[1]
    elsif (param[0] == "tbm" && param[1] == "isch")
      type = "i" 
    elsif (param[0] == "tbm" && param[1] == "vid")
      type = "v" 
    elsif (param[0] == "tbm" && param[1] == "nws")
      type = "n" 
    end
  end
  if first_split.size()>=2
    first_split[1].split("&").each do |param|
      puts param
      param = param.split("=")
      if param[0] == "q"
        query = param[1] 
        type = "w"
      elsif (param[0] == "tbm" && param[1] == "isch")
        type = "i" 
      elsif (param[0] == "tbm" && param[1] == "vid")
        type = "v" 
      elsif (param[0] == "tbm" && param[1] == "nws")
        type = "n" 
      end
    end
  end
  params = query.split('%20')
  google_search(irc, message, params, 3, type)
end

def google_search(irc, message, params, num=3, type="w")
  GoogleAjax.referer = 'mangas_at_smoothirc.net'
  human_params = params.join(" ")
  if type == "w"
    irc.privmsg message.channel, "Nyaa~ Yuko cherche \"#{human_params}\" sur google pour vous:"
    results = GoogleAjax::Search.web(params)[:results].take(num)
  elsif type == "i"
    irc.privmsg message.channel, "Nyaa~ Yuko cherche \"#{human_params}\" sur google images pour vous:"
    results = GoogleAjax::Search.images(params)[:results].take(num)
  elsif type == "n"
    irc.privmsg message.channel, "Nyaa~ Yuko cherche \"#{human_params}\" sur google actualités pour vous:"
    results = GoogleAjax::Search.news(params)[:results].take(num)
  elsif type == "v"
    irc.privmsg message.channel, "Nyaa~ Yuko cherche \"#{human_params}\" sur google video pour vous:"
    results = GoogleAjax::Search.video(params)[:results].take(num)
  end
 
  results.each do |entry|
    url   = entry[:unescaped_url]
    url   = entry[:url] if type == "v"
    title = entry[:title_no_formatting]
    if title.size > 0
      irc.privmsg message.channel, "#{title} →\x032 #{url}"
    else
      irc.privmsg message.channel, "\x032 #{url}"
    end
  end
end

init Yuko and run! # yeah ruuuuuuuun!
