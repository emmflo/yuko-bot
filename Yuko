#!/usr/bin/env ruby
# Oui le code est dégueux... Et alors ?!
require 'irc-socket'
require 'myanimelist'
require 'htmlentities'
require 'io/console'
# require 'open-uri'
require 'link_thumbnailer'

$:.unshift File.dirname(__FILE__)
require 'lib/yuko'
require 'lib/myanimelist-x'
require 'lib/message'

load 'config.rb'

Yuko.conf.prompt_mal_config unless Yuko.conf.mal_configured?

begin
  Yuko.conf.check
rescue Yuko::ConfError => e
  e.messages.each {|err| STDERR.puts "Errors: config.rb: #{err}"}
  exit
end


MyAnimeList.configure do |config|
  config.username = Yuko.conf.mal.username
  config.password = Yuko.conf.mal.password
end

begin
  MyAnimeList.verify_credentials
rescue RestClient::Unauthorized => e
  puts 'Error: Incorrect login or password (mal)'
  exit
end

LinkThumbnailer.configure do |config|
  config.attributes = [:title]
end


irc = IRCSocket.new(Yuko.conf.irc.server)
irc.connect

if irc.connected?
  irc.nick Yuko.conf.irc.nickname
  irc.user 'Yuko', 0, '*', 'I am a bot.'

  html = HTMLEntities.new

  while line = irc.read
    message = Message.new(line)
    puts "Received: #{message.raw}"

    if message.command == '376'
      irc.join Yuko.conf.irc.channel
      irc.privmsg Yuko.conf.irc.channel, Yuko.conf.irc.greeting unless Yuko.conf.irc.greeting.nil?
    end

    if message.command == 'PING'
      irc.pong message.params[0]
    end

    if message.command == 'PRIVMSG'
      request = message.trailing.match /^!(?<name>[^[[:blank:]]]+)([[:blank:]]+(?<params>.*))?$/
      urls    = message.trailing.scan /https?:\/\/[^[[:blank:]]]+/

      if request
        if (request[:name] == 'anime' || request[:name] == 'manga') && !request[:params].nil?
          search_type = request[:name]
          results     = search_type == 'anime' ? MyAnimeList.search_anime(request[:params]) : MyAnimeList.search_manga(request[:params])

          if results.any?
            irc.privmsg message.channel, "Résultats pour \"#{request[:params]}\""

            results.sort! {|entry1, entry2| entry2['score'].to_f <=> entry1['score'].to_f }
            results.take(5).each do |entry|
              title = html.decode entry['title']
              url   = "http://myanimelist.net/#{search_type}/#{entry['id']}"
              irc.privmsg message.channel, "#{title} →\x032 #{url}"
            end
          else
            irc.privmsg message.channel, "Aww~ la recherche pour \"#{request[:params]}\" n'a rien donné é_è"
          end
        end

        if request[:name] == 'Titof'
          irc.privmsg message.channel, "Nyaa~ onii-chan yameteeee... Touche pas mon ~/vendor gyaaaaaaah~!"
        end

        if request[:name] == 'Holo' || request[:name] == "shingekinoslg"
          irc.privmsg message.channel, "https://www.listenonrepeat.com/?v=8PN7kNWV06w"
        end
      end

      if urls.any?
        urls.take(3).each do |url|
          begin
            object = LinkThumbnailer.generate url
            irc.privmsg message.channel, object.title
          rescue StandardError
          end
        end
      end


    end

  end
end
